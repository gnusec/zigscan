name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    name: Build for ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          # Linux builds
          - os: ubuntu-latest
            target: x86_64-linux
            zig_target: x86_64-linux-gnu
            artifact_name: zigscan-linux-x86_64
            
          - os: ubuntu-latest
            target: aarch64-linux
            zig_target: aarch64-linux-gnu
            artifact_name: zigscan-linux-aarch64
            
          # macOS builds
          - os: macos-latest
            target: x86_64-macos
            zig_target: x86_64-macos
            artifact_name: zigscan-macos-x86_64
            
          - os: macos-latest
            target: aarch64-macos
            zig_target: aarch64-macos
            artifact_name: zigscan-macos-aarch64
            
          # Windows builds
          - os: windows-latest
            target: x86_64-windows
            zig_target: x86_64-windows-gnu
            artifact_name: zigscan-windows-x86_64.exe
            
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Zig (latest dev)
        uses: goto-bus-stop/setup-zig@v2
        with:
          version: 0.16.0-dev.699+529aa9f27

      - name: Build
        run: |
          zig build -Dtarget=${{ matrix.zig_target }} -Doptimize=ReleaseFast
          
      - name: Rename binary (Unix)
        if: runner.os != 'Windows'
        run: |
          mv zig-out/bin/zigscan zig-out/bin/${{ matrix.artifact_name }}
          chmod +x zig-out/bin/${{ matrix.artifact_name }}
          
      - name: Rename binary (Windows)
        if: runner.os == 'Windows'
        run: |
          Move-Item -Path zig-out/bin/zigscan.exe -Destination zig-out/bin/${{ matrix.artifact_name }}

      - name: Create tarball (Unix)
        if: runner.os != 'Windows'
        run: |
          cd zig-out/bin
          tar czf ${{ matrix.artifact_name }}.tar.gz ${{ matrix.artifact_name }}
          sha256sum ${{ matrix.artifact_name }}.tar.gz > ${{ matrix.artifact_name }}.tar.gz.sha256
          
      - name: Create zip (Windows)
        if: runner.os == 'Windows'
        run: |
          cd zig-out/bin
          Compress-Archive -Path ${{ matrix.artifact_name }} -DestinationPath ${{ matrix.artifact_name }}.zip
          
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}
          path: |
            zig-out/bin/${{ matrix.artifact_name }}.*

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          
      - name: Display structure
        run: ls -R artifacts/
        
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            artifacts/**/*
          body: |
            ## ZigScan Release ${{ github.ref_name }}
            
            High-performance port scanner written in Zig.
            
            ### Downloads
            
            **Linux:**
            - `zigscan-linux-x86_64.tar.gz` - Linux x86_64
            - `zigscan-linux-aarch64.tar.gz` - Linux ARM64
            
            **macOS:**
            - `zigscan-macos-x86_64.tar.gz` - macOS Intel
            - `zigscan-macos-aarch64.tar.gz` - macOS Apple Silicon (M1/M2)
            
            **Windows:**
            - `zigscan-windows-x86_64.exe.zip` - Windows x86_64
            
            ### Usage
            
            ```bash
            # Extract (Linux/macOS)
            tar xzf zigscan-*.tar.gz
            
            # Run
            ./zigscan -t <target> -p <ports>
            ```
            
            See [README.md](https://github.com/gnusec/zigscan/blob/main/README.md) for full documentation.
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
