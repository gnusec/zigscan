name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-linux:
    name: Build Linux ${{ matrix.target }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target: [
          "x86_64-linux-gnu",
          "aarch64-linux-gnu",
          "arm-linux-gnueabihf",
          "x86-linux-gnu",
          "riscv64-linux-gnu",
          "x86_64-linux-musl",
          "aarch64-linux-musl"
        ]
    steps:
      - uses: actions/checkout@v4
      - uses: goto-bus-stop/setup-zig@v2
        with:
          version: master
      - name: Build (static-preferred)
        run: |
          T="${{ matrix.target }}"
          if [[ "$T" == *"linux-musl"* ]]; then
            zig build -Dtarget="$T" -Doptimize=ReleaseSafe -Dstatic=true -Dstrip=true
          else
            if zig build -Dtarget="$T" -Doptimize=ReleaseSafe -Dstatic=true -Dstrip=true; then
              echo "static link ok"
            else
              echo "fallback to dynamic"
              zig build -Dtarget="$T" -Doptimize=ReleaseSafe -Dstrip=true
            fi
          fi
      - name: Package
        run: |
          OUT="zigscan-${{ matrix.target }}"
          mv zig-out/bin/zigscan "$OUT"
          chmod +x "$OUT"
          tar czf "$OUT.tar.gz" "$OUT"
          sha256sum "$OUT.tar.gz" > "$OUT.tar.gz.sha256"
          echo "size-bytes=$(stat -c %s "$OUT" 2>/dev/null || stat -f %z "$OUT" 2>/dev/null)"
      - uses: actions/upload-artifact@v4
        with:
          name: zigscan-${{ matrix.target }}
          path: |
            zigscan-${{ matrix.target }}
            zigscan-${{ matrix.target }}.tar.gz
            zigscan-${{ matrix.target }}.tar.gz.sha256
          if-no-files-found: ignore

  build-macos:
    name: Build macOS ${{ matrix.target }}
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        target: ["x86_64-macos", "aarch64-macos"]
    steps:
      - uses: actions/checkout@v4
      - uses: goto-bus-stop/setup-zig@v2
        with:
          version: master
      - name: Build
        run: zig build -Dtarget=${{ matrix.target }} -Doptimize=ReleaseSafe -Dstrip=true
      - name: Package
        run: |
          OUT="zigscan-${{ matrix.target }}"
          mv zig-out/bin/zigscan "$OUT"
          chmod +x "$OUT"
          tar czf "$OUT.tar.gz" "$OUT"
          shasum -a 256 "$OUT.tar.gz" > "$OUT.tar.gz.sha256"
          echo "size-bytes=$(stat -f %z "$OUT" 2>/dev/null || echo N/A)"
      - uses: actions/upload-artifact@v4
        with:
          name: zigscan-${{ matrix.target }}
          path: |
            zigscan-${{ matrix.target }}
            zigscan-${{ matrix.target }}.tar.gz
            zigscan-${{ matrix.target }}.tar.gz.sha256
          if-no-files-found: ignore

  build-experimental:
    name: EXP Build ${{ matrix.target }}
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      fail-fast: false
      matrix:
        target: [
          "x86_64-windows",
          "aarch64-windows",
          "x86-windows",
          "loongarch64-linux-gnu",
          "mips-linux-musl",
          "mipsel-linux-musl",
          "mips64-linux-musl",
          "mips64el-linux-musl",
          "mips-linux-gnu",
          "mipsel-linux-gnu",
          "mips64-linux-gnu",
          "mips64el-linux-gnu",
          "powerpc64le-linux-gnu",
          "s390x-linux-gnu",
          "riscv32-linux-gnu",
          "riscv64-linux-musl",
          "arm-linux-musleabihf"
        ]
    steps:
      - uses: actions/checkout@v4
      - uses: goto-bus-stop/setup-zig@v2
        with:
          version: master
      - name: Build (static-preferred, size-optimized for IoT)
        run: |
          T="${{ matrix.target }}"
          if [[ "$T" == *"linux-musl"* ]]; then
            zig build -Dtarget="$T" -Doptimize=ReleaseSmall -Dstatic=true -Dstrip=true || zig build -Dtarget="$T" -Doptimize=ReleaseSmall -Dstrip=true
          else
            zig build -Dtarget="$T" -Doptimize=ReleaseSmall -Dstatic=true -Dstrip=true || zig build -Dtarget="$T" -Doptimize=ReleaseSmall -Dstrip=true
          fi
      - name: Package
        run: |
          OUT="zigscan-${{ matrix.target }}"
          if [[ "${{ matrix.target }}" == *"-windows"* ]]; then
            mv zig-out/bin/zigscan.exe "$OUT.exe" || true
            zip -9 "$OUT.zip" "$OUT.exe" || true
            sha256sum "$OUT.zip" > "$OUT.zip.sha256" || true
          else
            mv zig-out/bin/zigscan "$OUT" || true
            chmod +x "$OUT" || true
            tar czf "$OUT.tar.gz" "$OUT" || true
            sha256sum "$OUT.tar.gz" > "$OUT.tar.gz.sha256" || true
          fi
      - uses: actions/upload-artifact@v4
        with:
          name: zigscan-${{ matrix.target }}
          path: |
            zigscan-${{ matrix.target }}
            zigscan-${{ matrix.target }}.exe
            zigscan-${{ matrix.target }}.tar.gz
            zigscan-${{ matrix.target }}.zip
            zigscan-${{ matrix.target }}.tar.gz.sha256
            zigscan-${{ matrix.target }}.zip.sha256
          if-no-files-found: ignore

  release:
    name: Create Release
    needs: [build-linux, build-macos, build-experimental]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: artifacts
      - run: ls -R artifacts/
      - uses: softprops/action-gh-release@v1
        with:
          files: artifacts/**/*
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
