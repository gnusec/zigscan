name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Zig (nightly)
        uses: goto-bus-stop/setup-zig@v2
        with:
          version: master

      - name: Build
        run: zig build

      - name: Performance smoke test (localhost 80-555, c=100, timeout=200ms, <10s)
        run: |
          python3 - <<'PY'
          import time, subprocess, sys
          start = time.time()
          code = subprocess.call(["./zig-out/bin/zigscan","-t","127.0.0.1","-r","80-555","-c","100","--timeout","200"], stdout=subprocess.DEVNULL)
          if code != 0:
              sys.exit(code)
          dur = int((time.time()-start)*1000)
          print(f"duration={dur}ms")
          if dur > 10000:
              print("FAIL: scan took >10s")
              sys.exit(1)
          PY

      - name: Performance smoke test (103.235.46.115 ports 80,443, c=100, timeout=200ms, <10s)
        run: |
          python3 - <<'PY'
          import time, subprocess, sys
          start = time.time()
          code = subprocess.call(["./zig-out/bin/zigscan","-t","103.235.46.115","-p","80,443","-c","100","--timeout","200"], stdout=subprocess.DEVNULL)
          if code != 0:
              sys.exit(code)
          dur = int((time.time()-start)*1000)
          print(f"duration={dur}ms")
          if dur > 10000:
              print("FAIL: scan took >10s")
              sys.exit(1)
          PY

  cross-build:
    name: Cross-build ${{ matrix.target }} on ubuntu-latest
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target: [
          "x86_64-linux-gnu",
          "aarch64-linux-gnu",
          "arm-linux-gnueabihf",
          "i386-linux-gnu",
          "riscv64-linux-gnu",
          "x86_64-linux-musl",
          "aarch64-linux-musl",
          "x86_64-macos",
          "aarch64-macos"
        ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Zig (nightly)
        uses: goto-bus-stop/setup-zig@v2
        with:
          version: master

      - name: Cross build
        run: |
          if [[ "${{ matrix.target }}" == *"linux-musl"* ]]; then
            zig build -Dtarget=${{ matrix.target }} -Doptimize=ReleaseSafe -Dstatic=true
          else
            # Try static first; if unsupported, fallback to dynamic
            if zig build -Dtarget=${{ matrix.target }} -Doptimize=ReleaseSafe -Dstatic=true; then
              echo "static link succeeded"
            else
              echo "static link unsupported; falling back to dynamic"
              zig build -Dtarget=${{ matrix.target }} -Doptimize=ReleaseSafe
            fi
          fi

      - name: Run help test
        run: ./zig-out/bin/zigscan --help
        if: runner.os != 'Windows'
        
      - name: Run help test (Windows)
        run: ./zig-out/bin/zigscan.exe --help
        if: runner.os == 'Windows'

  lint:
    name: Format Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Zig (nightly)
        uses: goto-bus-stop/setup-zig@v2
        with:
          version: master

      - name: Check formatting
        run: zig fmt --check src/
